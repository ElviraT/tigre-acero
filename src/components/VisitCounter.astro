---
// Este componente muestra un contador de visitas usando GoatCounter
const GOAT_COUNTER_CODE = 'elvirat.goatcounter.com';
---

<div id="visit-counter" class="fixed bottom-4 right-4 bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-lg shadow-lg p-3 text-sm text-gray-700 dark:text-gray-200 z-50 border border-gray-200 dark:border-gray-700">
  <div class="flex items-center space-x-2">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-500" viewBox="0 0 20 20" fill="currentColor">
      <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
    </svg>
    <span id="visit-count" class="font-medium">Cargando visitas...</span>
  </div>
</div>

<script>
// Verificar si estamos en el navegador
if (typeof window !== 'undefined') {
  // Cargar el script de GoatCounter
  const script = document.createElement('script');
  script.src = '//gc.zgo.at/count.js';
  script.async = true;
  script.setAttribute('data-goatcounter', 'https://elvirat.goatcounter.com/count');
  document.head.appendChild(script);

  // Función para formatear el número de visitas
  function formatVisitCount(count) {
    return `${count} visitas`;
  }

  // Función para actualizar el contador
  async function updateCounter() {
    try {
      const counterElement = document.getElementById('visit-count');
      
      // Usamos la API de GoatCounter para obtener el contador
      const response = await fetch(`https://elvirat.goatcounter.com/counter/${encodeURIComponent(window.location.pathname)}.json`);
      
      if (!response.ok) throw new Error('Error al obtener el contador');
      
      const data = await response.json();
      const count = data.count || 0;
      
      counterElement.textContent = formatVisitCount(count);
      
      // Guardar en localStorage para referencia rápida
      localStorage.setItem('lastVisitCount', count);
      localStorage.setItem('lastVisitDate', new Date().toDateString());
      
    } catch (error) {
      console.error('Error al actualizar visitas:', error);
      // Mostrar el último contador guardado si está disponible
      const lastCount = localStorage.getItem('lastVisitCount');
      const counterElement = document.getElementById('visit-count');
      
      if (lastCount) {
        counterElement.textContent = formatVisitCount(lastCount);
      } else {
        counterElement.textContent = 'Visitas: -';
      }
    }
  }
  
  // Inicializar el contador cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', () => {
    // Esperar un momento para que GoatCounter se cargue
    setTimeout(updateCounter, 2000);
    
    // Actualizar el contador periódicamente
    setInterval(updateCounter, 5 * 60 * 1000); // Cada 5 minutos
  });
}
</script>

<style>
/* Estilos responsivos */
#visit-counter {
  transition: all 0.3s ease;
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
}

#visit-counter:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

@media (max-width: 640px) {
  #visit-counter {
    right: 0.75rem;
    bottom: 0.75rem;
    font-size: 0.75rem;
    padding: 0.5rem 0.75rem;
  }
}
</style>
